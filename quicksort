def quicksort(list):
    quicksortHelper(list, 0, len(list) - 1)


def quicksortHelper(list, left, right):
    if left < right:
        pivotlocation = partition(list, left, right)
        quicksortHelper(list, left, pivotlocation - 1)
        quicksortHelper(list, pivotlocation + 1, right)


def partition(list, left, right):
    middle = (left + right) // 2
    pivot = list[middle]
    list[middle] = list[right]
    list[right] = pivot
    boundry = left
    for index in range(left, right):
        if list[index] < pivot:
            swap(list, index, boundry)
            boundry += 1
    swap(list, right, boundry)
    return boundry


def swap(list, i, j):
    temp = list[i]
    list[i] = list[j]
    list[j] = temp


import random


def main(size=20, sort=quicksort):
    list = []
    for count in range(size):
        list.append(random.randint(1, size + 1))
    print(list)
    sort(list)
    print(list)


if __name__ == "__main__":
    main()

